# Generated by Django 3.2.11 on 2022-01-17 17:01

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccountUser',
            fields=[
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('user_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('nickname', models.CharField(max_length=20, unique=True)),
                ('acc_percent', models.FloatField()),
                ('point', models.IntegerField()),
                ('profile_img', models.CharField(blank=True, max_length=200, null=True)),
                ('is_default_profile', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('is_staff', models.IntegerField()),
                ('is_superuser', models.IntegerField()),
            ],
            options={
                'db_table': 'account_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'account_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'account_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VoteChoice',
            fields=[
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('choice_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('choice', models.IntegerField()),
                ('is_answer', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'vote_choice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VoteVote',
            fields=[
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('vote_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('state', models.IntegerField()),
                ('finished_at', models.DateTimeField()),
                ('tracked_at', models.DateTimeField()),
                ('created_price', models.IntegerField()),
                ('finished_price', models.IntegerField(blank=True, null=True)),
                ('spent_point', models.IntegerField()),
                ('earned_point', models.IntegerField()),
                ('is_answer', models.IntegerField(blank=True, null=True)),
                ('duration', models.CharField(max_length=10)),
                ('range', models.IntegerField()),
                ('comment', models.CharField(max_length=10)),
                ('pos_participants', models.IntegerField()),
                ('neg_participants', models.IntegerField()),
                ('pos_whales', models.IntegerField()),
                ('neg_whales', models.IntegerField()),
                ('total_participants', models.IntegerField()),
            ],
            options={
                'db_table': 'vote_vote',
                'managed': False,
            },
        ),
    ]
